62,117c62,127
< [3] erase: 0
< size: 4
< capacity: OK
< max_size: 768614336404564650
< 
< Content is:
< - FFFFF
< - GGGG
< - HHH
< - II
< ###############################################
< [4] erase: 1
< size: 2
< capacity: OK
< max_size: 768614336404564650
< 
< Content is:
< - FFFFF
< - II
< ###############################################
< size: 4
< capacity: OK
< max_size: 768614336404564650
< 
< Content is:
< - FFFFF
< - II
< - Hello
< - Hi there
< ###############################################
< [5] erase: 1
< size: 1
< capacity: OK
< max_size: 768614336404564650
< 
< Content is:
< - FFFFF
< ###############################################
< size: 5
< capacity: OK
< max_size: 768614336404564650
< 
< Content is:
< - FFFFF
< - ONE
< - TWO
< - THREE
< - FOUR
< ###############################################
< [6] erase: 0
< size: 0
< capacity: OK
< max_size: 768614336404564650
< 
< Content is:
< ###############################################
---
> =================================================================
> ==15329==ERROR: AddressSanitizer: heap-use-after-free on address 0x613000000249 at pc 0x00010abebf89 bp 0x7ffee50488b0 sp 0x7ffee5048048
> READ of size 5 at 0x613000000249 thread T0
>     #0 0x10abebf88 in wrap_memmove (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x1df88)
>     #1 0x7fff65bc16ff in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long) (libc++.1.dylib:x86_64+0x36ff)
>     #2 0x7fff65bc1670 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) (libc++.1.dylib:x86_64+0x3670)
>     #3 0x10abbe46e in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >* ft::copy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) utils.hpp:137
>     #4 0x10abbad8e in ft::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::erase(ft::my_random_acces_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, ft::my_random_acces_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >) vector.hpp:284
>     #5 0x10abb8960 in main erase.cpp:26
>     #6 0x7fff689943d4 in start (libdyld.dylib:x86_64+0x163d4)
> 
> 0x613000000249 is located 73 bytes inside of 384-byte region [0x613000000200,0x613000000380)
> freed by thread T0 here:
>     #0 0x10ac3cb02 in wrap__ZdlPv (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x6eb02)
>     #1 0x10abbe3d4 in std::__1::_DeallocateCaller::__do_call(void*) new:320
>     #2 0x10abbe3b8 in std::__1::_DeallocateCaller::__do_deallocate_handle_size(void*, unsigned long) new:278
>     #3 0x10abbe390 in std::__1::_DeallocateCaller::__do_deallocate_handle_size_align(void*, unsigned long, unsigned long) new:248
>     #4 0x10abbe364 in std::__1::__libcpp_deallocate(void*, unsigned long, unsigned long) new:326
>     #5 0x10abbe2ed in std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::deallocate(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, unsigned long) memory:1817
>     #6 0x10abbde26 in ft::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::uncreate() vector.hpp:321
>     #7 0x10abbace0 in ft::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::erase(ft::my_random_acces_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, ft::my_random_acces_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >) vector.hpp:283
>     #8 0x10abb8960 in main erase.cpp:26
>     #9 0x7fff689943d4 in start (libdyld.dylib:x86_64+0x163d4)
> 
> previously allocated by thread T0 here:
>     #0 0x10ac3c502 in wrap__Znwm (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x6e502)
>     #1 0x10abbe528 in std::__1::__libcpp_allocate(unsigned long, unsigned long) new:239
>     #2 0x10abbe431 in std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::allocate(unsigned long, void const*) memory:1814
>     #3 0x10abb9a1b in ft::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::erase(ft::my_random_acces_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >) vector.hpp:260
>     #4 0x10abb874b in main erase.cpp:24
>     #5 0x7fff689943d4 in start (libdyld.dylib:x86_64+0x163d4)
> 
> SUMMARY: AddressSanitizer: heap-use-after-free (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x1df88) in wrap_memmove
> Shadow bytes around the buggy address:
>   0x1c25fffffff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
>   0x1c2600000000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
>   0x1c2600000010: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
>   0x1c2600000020: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
>   0x1c2600000030: fd fd fa fa fa fa fa fa fa fa fa fa fa fa fa fa
> =>0x1c2600000040: fd fd fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd
>   0x1c2600000050: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
>   0x1c2600000060: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
>   0x1c2600000070: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
>   0x1c2600000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
>   0x1c2600000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
> Shadow byte legend (one shadow byte represents 8 application bytes):
>   Addressable:           00
>   Partially addressable: 01 02 03 04 05 06 07 
>   Heap left redzone:       fa
>   Freed heap region:       fd
>   Stack left redzone:      f1
>   Stack mid redzone:       f2
>   Stack right redzone:     f3
>   Stack after return:      f5
>   Stack use after scope:   f8
>   Global redzone:          f9
>   Global init order:       f6
>   Poisoned by user:        f7
>   Container overflow:      fc
>   Array cookie:            ac
>   Intra object redzone:    bb
>   ASan internal:           fe
>   Left alloca redzone:     ca
>   Right alloca redzone:    cb
>   Shadow gap:              cc
> ==15329==ABORTING
