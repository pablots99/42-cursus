1: fork -> creates a child process
	 -> https://man7.org/linux/man-pages/man2/fork.2.html
	pipe -> pipe is a connection between two processes, such that the standard output from one process becomes the standard input of the other process
	->  https://www.geeksforgeeks.org/pipe-system-call/
2: wait,waitpid,wait3,wait4 -> wait a process to change state
	 -> https://man7.org/linux/man-pages/man2/wait.2.html
3: signal -> ver bien este proyecto
	-> https://www.tutorialspoint.com/c_standard_library/c_function_signal.htm
4: kill	  -> send signal to a process
	-> https://man7.org/linux/man-pages/man2/kill.2.html
5: exit()
	-> https://www.tutorialspoint.com/c_standard_library/c_function_exit.htm
6: chdir -> change working directory
	-> https://www.geeksforgeeks.org/chdir-in-c-language-with-examples/
7:  stat, lstat, fstat return information about the file pointed
	-> https://man7.org/linux/man-pages/man2/lstat.2.html
8: execve -> execute a program
	-> https://man7.org/linux/man-pages/man2/execve.2.html
9: dup, dup2 crear duplicados de descriptres(MIRARI BIEN!!!)
	-> https://baulderasec.wordpress.com/programacion/programacion-con-linux/3-trabajando-con-los-archivos/acceso-de-bajo-nivel-a-archivos/dup-y-dup2/
10: opendir, readdir, closedir
	-> https://pasky.wordpress.com/2009/08/05/funciones-opendir-readdir-y-closedir-en-c/
11: sterror -> describes the error code passed in the argument errnum
	-> https://man7.org/linux/man-pages/man3/strerror.3.html
12: errno 	-> number of last error
	-> https://man7.org/linux/man-pages/man3/errno.3.html
13: isatty -> test whether a file descriptor refers to a terminal
	-> https://man7.org/linux/man-pages/man3/isatty.3.html
14:  ttyname ->  return name of a terminal
	-> https://man7.org/linux/man-pages/man3/ttyname.3.html
15: ttyslot -> find the slot of the current user's terminal in some
	-> https://man7.org/linux/man-pages/man3/ttyslot.3.html
16: ioctl -> system call manipulates the underlying device parameters
	-> https://man7.org/linux/man-pages/man2/ioctl.2.html
17: getenv ->  searches for the environment string pointed to by name and returns the associated value to the string.
	-> https://www.tutorialspoint.com/c_standard_library/c_function_getenv.htm



TO DO:
	update pwd and old pwd  in env
	check status code values
	env does not work with pipes
	'ctrl + \' when is text writed in the prompt have to work like 'ctrl + d'
	double redireccion ctrl c
	builtins arguments
LEAKS:
	data.exportables -> son para cuando pones export normal

CASES NOT WORKING
